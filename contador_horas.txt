15
5
10
10
10
10
5
5
10
20
20
20
20
5
5
10
10
5
5
10
10
10
10
15
5
10
15
15

15
5
10
10
10
10
5
5
10
40
30
20
20
5
5
10
10
5
5
10
5
10
15
15
5
10
300


Posibles cambios en la documentación:
-El diagrama de Gantt hay que hacerlo desde el inicio
-Tal vez habría que quitar cosas en la explicación entre la comunicación entre raspberry y arduino. Aunque esas cosas no están previamente explicadas. Probablemente habría que usar diagramas para explicar este funcionamiento
-La estabilidad del sistema Arduino se podría quitar
-Hay que hacer un anexo para las siglas y tecnicismos. También una referencia a las licencias
-Estaría bien hacer un presupuesto, en el presupuesto debería de ser hasta la puesta en producción. O bien la elaboración del prototipo
-Hay que hacer un collage para hacer una imagen para el proyecto. Habrá páginas para generar esto, pero estaría bien usar el logo oficial de cada tecnología
-¿requisitos funcionales y no funcionales
-Titulo e índice del proyecto

Cosas para hacer en la página:
-Hacer un logo, palabras para el logo: HTML,CSS,JavaScript,TypeScript, Angular, node.js, sequelize, postgress, raspberry, c++
-Mejorar la selección de cada place en el combo. Esta muy bien el componente del PrimeNG. habría que instalarlo
-Optimizar la carga de las mediciones, habrá que meter algún índice
-Mejorar la estética en general, examinar la página en pantallas pequeñas
-Meter el último sprint de configuración de los sensores por lugar. Ya no queda mas tiempo. De todas formas ya hay bastantes cosas hechas

Lista de siglas:
'HTML', 'PHP', 'JavaScript', 'Framework', 'Microservicios', 'BackEnd', 'FrontEnd', 'Node.js', 'Java', 'MIT', 'Tipado', 'Express', 'Sequelize', 'ORM', 'Software', 'Hardware', 'Stock','Topología', 'CRUD', 'Filtro', 'USB', 'WIFI', 'Digital', 'Analógico', 'Bit', 'KiloBytes', 'RAM', 'KB', 'Compilación', 'C',  'C++', 'Reseteo', 'Bps', 'GPIO', 'TX/RX', 'Voltio', 'Patilla', 'Checksum', 'String', 'Valores booleanos', 'Instancia', 'Singleton', 'Output', 'USB', 'CPU', 'Tensión', 'Persistir', 'Booleano', 'Licencia BSD,Servidor', 'Sequelize', 'Microllamadas', 'Express', 'Middleware', 'Token', 'SGBD', 'URL', 'SCSS', 'TypeScript', 'CSS', 'SQL', 'JSON', 'Formulario', 'Ventana emergente', 'Sesión', 'Hash','Contraseña', 'HTTPS', 'Token', 'Cookies', 'Dashboard', 'MIT', 'Scroll', 'Prueba de estress'

 
Desarrollo del vídeo de explicación
 - Explicación de cada elemento: sensores, relés, Arduino, Raspberry, Servidor, cliente local: 6 cosas.
 - Explicación de la página web: login, usuarios, lugares (datos, historial de mediciones (y activación de salidas), mediciones de lugar(últimos valores), mapa (se pulsa y va al historial))
 - Alarmas: es un historial
 - Acciones: es un historial
 
 Texto:
 El sistema aquí presentado esta compuesto por varios elementos. (Enseñar diagrama). Una parte es la que está en los lugares, compuesta por sensores, interruptores que pueden ser activados remotamente y el Hardware que recopila sus datos. Otra parte es el servidor central donde se replican los datos de los lugares y donde se conectan los clientes. En la parte final estan los terminales de los clientes que funcionan mediante un portal web.
 Este es el extremo final de esta aplicación distribuida. En el portal cada usuario tiene un rol con un determinado nivel de permisos. El administrador puede gestionar todo en la aplicación empezando por los usuarios.
 En la pestaña de los lugares se pueden manipular los lugares de los que se tienen permisos. Visualizar las mediciones de los sensores en una gráfica mientras se activan o desactivan los interruptores de ese lugar. Visualizar los últimos valores de cada lugar de los que se tiene permiso y visualizar cada lugar en un mapa para conocerlos por su dirección.
 También se puede visualizar eventos importantes que han ocurrido en el tiempo para que no queden desapercibidos. Hay una sección de alarmas donde se pueden visualizar los momentos en los que los sensores han tomado valores críticos.
 Finalmente también se puede ver un historial de las acciones realizadas sobre los interruptores. Por defecto se visualizarán los que tienen menos de un año

 
 La arquitectura hexagonal: la clave de esta estructura es separar la lógica de la tecnología, principalmente la tecnología a la que se accede desde el exterior de la lógica. De esta forma si se cambian los accesos exteriores se pueden implementar esos cambios rápidamente ya que sus dependencias en el código son muy bajas.
